/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import type { Mesh, MeshStandardMaterial } from 'three'
import type { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import type { ConvexHullColliderProps } from '../components/Physics'
import { ConvexHullCollider } from '../components/Physics'

type GLTFResult = GLTF & {
  nodes: {
    Stone: Mesh
  }
  materials: {
    Stone: MeshStandardMaterial
  }
}

export default function Stone(props: Omit<ConvexHullColliderProps, 'args'>) {
  const { nodes } = useGLTF('/stone.gltf') as GLTFResult
  const { geometry } = nodes.Stone
  const vertices = geometry.attributes.position.array as Float32Array

  return (
    <ConvexHullCollider args={[vertices]} density={4} {...props}>
      <mesh castShadow receiveShadow geometry={nodes.Stone.geometry}>
        <meshStandardMaterial color={0x625b4e} roughness={0.9} metalness={0} />
      </mesh>
    </ConvexHullCollider>
  )
}

useGLTF.preload('/stone.gltf')
