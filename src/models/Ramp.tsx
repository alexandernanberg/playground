/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import type { Mesh } from 'three'
import type { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import type { ConvexHullColliderProps } from '../components/Physics'
import { ConvexHullCollider } from '../components/Physics'

type GLTFResult = GLTF & {
  nodes: {
    Ramp: Mesh
  }
  materials: Record<string, never>
}

export default function Ramp(props: Omit<ConvexHullColliderProps, 'args'>) {
  const { nodes } = useGLTF('/ramp.gltf') as GLTFResult
  const { position } = nodes.Ramp.geometry.attributes

  return (
    <ConvexHullCollider args={[position.array as Float32Array]} {...props}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Ramp.geometry}
        material={nodes.Ramp.material}
      />
    </ConvexHullCollider>
  )
}

useGLTF.preload('/ramp.gltf')
