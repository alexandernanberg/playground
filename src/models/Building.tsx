/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import { useRef } from 'react'
import type { Mesh, MeshStandardMaterial } from 'three'
import type { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    Cube021: Mesh
    Cube021_1: Mesh
    Cube021_2: Mesh
    Cube021_3: Mesh
    Cube021_4: Mesh
    Cube021_5: Mesh
    Cube021_6: Mesh
  }
  materials: {
    Windows: MeshStandardMaterial
    Glass: MeshStandardMaterial
    Bricks: MeshStandardMaterial
    Main: MeshStandardMaterial
    Dark: MeshStandardMaterial
    White: MeshStandardMaterial
    Black: MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF(
    '/four-story-building.gltf',
  ) as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube021.geometry}
        material={materials.Windows}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube021_1.geometry}
        material={materials.Glass}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube021_2.geometry}
        material={materials.Bricks}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube021_3.geometry}
        material={materials.Main}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube021_4.geometry}
        material={materials.Dark}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube021_5.geometry}
        material={materials.White}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube021_6.geometry}
        material={materials.Black}
      />
    </group>
  )
}

useGLTF.preload('/four-story-building.gltf')
